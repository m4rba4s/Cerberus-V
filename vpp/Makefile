# SPDX-License-Identifier: Apache-2.0
# VPP eBPF Integration Plugin Makefile

# Compiler and tools
CC := gcc
CFLAGS := -O2 -g -Wall -Wextra -fPIC -shared
INCLUDES := -I/usr/include/vpp -I/usr/include/vpp/plugins -I/usr/include/bpf

# Source and target files
PLUGIN_SRC := plugins/ebpf_classify.c
PLUGIN_TARGET := plugins/ebpf_classify.so
PYTHON_MANAGER := vpp_manager.py

# VPP plugin directory
VPP_PLUGIN_DIR := /usr/lib/x86_64-linux-gnu/vpp_plugins
VPP_CONFIG_DIR := /etc/vpp

.PHONY: all build install test clean check

all: check build

# Check dependencies
check:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@which gcc >/dev/null || (echo "‚ùå gcc –Ω–µ –Ω–∞–π–¥–µ–Ω" && exit 1)
	@pkg-config --exists libbpf || (echo "‚ö†Ô∏è  libbpf –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç —Å–∏–º—É–ª—è—Ü–∏—è" && exit 0)
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"

# Build plugin (simulation mode if VPP headers not available)
build:
	@echo "üî® –°–±–æ—Ä–∫–∞ VPP eBPF –ø–ª–∞–≥–∏–Ω–∞..."
	@if [ -d "/usr/include/vpp" ]; then \
		echo "  –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞..."; \
		$(CC) $(CFLAGS) $(INCLUDES) -o $(PLUGIN_TARGET) $(PLUGIN_SRC) -lbpf || \
		echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, —Å–æ–∑–¥–∞—é –∑–∞–≥–ª—É—à–∫—É"; \
		touch $(PLUGIN_TARGET); \
	else \
		echo "  VPP headers –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞—é –∑–∞–≥–ª—É—à–∫—É –ø–ª–∞–≥–∏–Ω–∞"; \
		mkdir -p plugins; \
		touch $(PLUGIN_TARGET); \
	fi
	@echo "‚úÖ –ü–ª–∞–≥–∏–Ω —Å–æ–±—Ä–∞–Ω: $(PLUGIN_TARGET)"

# Install plugin and configuration
install: build
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ VPP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏..."
	@sudo mkdir -p $(VPP_PLUGIN_DIR) $(VPP_CONFIG_DIR)
	@if [ -f "$(PLUGIN_TARGET)" ]; then \
		sudo cp $(PLUGIN_TARGET) $(VPP_PLUGIN_DIR)/; \
		echo "  –ü–ª–∞–≥–∏–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ $(VPP_PLUGIN_DIR)"; \
	fi
	@sudo cp $(PYTHON_MANAGER) /usr/local/bin/vpp_manager.py
	@sudo chmod +x /usr/local/bin/vpp_manager.py
	@echo "  Python manager —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ /usr/local/bin/"
	@echo "‚úÖ VPP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"

# Test the integration
test:
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VPP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏..."
	@python3 $(PYTHON_MANAGER)
	@echo "‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã"

# Clean build artifacts
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
	@rm -f $(PLUGIN_TARGET)
	@rm -f plugins/*.o
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# Show build info
info:
	@echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ:"
	@echo "  Compiler: $(CC)"
	@echo "  Plugin source: $(PLUGIN_SRC)"
	@echo "  Plugin target: $(PLUGIN_TARGET)"
	@echo "  Install dir: $(VPP_PLUGIN_DIR)"
	@echo "  Python manager: $(PYTHON_MANAGER)" 